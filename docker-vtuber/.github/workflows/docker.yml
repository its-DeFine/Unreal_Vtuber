name: Build and Push Docker Images

on:
  push:
    branches: [main, master]
    tags:
      - 'v*.*.*' # Trigger on version tags
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.repository }} # This is good for a single image repo

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # For OIDC if you use keyless signing

    strategy:
      matrix:
        include:
          - service: neurobridge
            dockerfile: ./NeuroBridge/dockerfile
            context: .
            image_suffix: neurobridge
          - service: webapp
            dockerfile: ./webapp/Dockerfile # Assuming Dockerfile path
            context: ./webapp
            image_suffix: webapp
          - service: eliza-the-org
            dockerfile: ./eliza-livepeer-integration/Dockerfile
            context: ./eliza-livepeer-integration
            image_suffix: eliza-the-org
          - service: nginx-rtmp
            dockerfile: ./files_docker_rtmp/docker/rtmp/Dockerfile
            context: ./files_docker_rtmp/docker/rtmp
            image_suffix: nginx-rtmp
          # Add other services here
          # - service: autonomous-starter
          #   dockerfile: ./autonomous-starter/Dockerfile
          #   context: ./autonomous-starter
          #   image_suffix: autonomous-starter

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive # To ensure all code, including submodules, is checked out

      - name: Log in to ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.image_suffix }}
          # github.repository_owner is generally preferred for organization-level packages
          # For personal repos, github.repository can be used as <owner>/<repo_name>/<image_suffix>

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Free up disk space
        run: |
          echo "Initial disk space:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Disk space after cleanup:"
          df -h

      - name: Build and push ${{ matrix.service }}
        # Only run if the event is not a pull_request AND the commit message doesn't contain '[skip-servicename]'
        if: |-
          github.event_name != 'pull_request' &&
          !contains(github.event.head_commit.message, format('[skip-{0}]', matrix.service))
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }} # Don't push on PRs
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false # Temporarily disable provenance to see if it helps checksum issue
          # platforms: linux/amd64,linux/arm64 # Uncomment for multi-arch builds 

      - name: Build and push ${{ matrix.service }} (for PRs - no push, no skip logic)
        # Only run for pull_requests to build but not push, and skip logic doesn't apply here
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: false # Ensure push is false for PRs
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          # platforms: linux/amd64,linux/arm64 # Uncomment for multi-arch builds 