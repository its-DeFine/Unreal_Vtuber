version: '3.8'

services:
  # Ollama for local LLM inference with GPU support
  ollama:
    image: ollama/ollama:latest
    container_name: autogen_ollama
    runtime: nvidia
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - autogen_net
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Ollama model loader - pulls model after Ollama is ready
  ollama-loader:
    image: curlimages/curl:latest
    container_name: ollama_loader
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - autogen_net
    entrypoint: >
      sh -c "
        echo 'Waiting for Ollama to be ready...' &&
        sleep 5 &&
        echo 'Pulling tinyllama model...' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\": \"tinyllama\"}' &&
        echo 'Model pull initiated' &&
        sleep 10 &&
        echo 'Loading model into memory...' &&
        curl -X POST http://ollama:11434/api/generate -d '{\"model\": \"tinyllama\", \"prompt\": \"Hello\", \"stream\": false}' &&
        echo 'Model loaded successfully'
      "
    restart: "no"

  # PostgreSQL with pgvector
  postgres:
    image: ankane/pgvector:latest
    container_name: autogen_postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=autonomous_agent
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    restart: unless-stopped
    networks:
      - autogen_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AutoGen agent with intelligent tool selection
  autogen_agent:
    build:
      context: ./app/CORE/autogen-agent
      dockerfile: Dockerfile
    container_name: autogen_agent
    volumes:
      - ./app/CORE/autogen-agent/autogen_agent:/app/autogen_agent
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/autonomous_agent
      - USE_COGNITIVE_ENHANCEMENT=true
      - STANDALONE_MODE=true
      - LOOP_INTERVAL=30
      - LOG_LEVEL=INFO
      - PORT=8000
      # Ollama configuration for local LLM
      - OLLAMA_HOST=http://ollama:11434
      - USE_OLLAMA=true
      # Cognee disabled to fix DNS issues
      - COGNEE_URL=
      - COGNEE_API_KEY=
      # Evolution Configuration - Enable Real Modifications
      - DARWIN_GODEL_REAL_MODIFICATIONS=true
      - DARWIN_GODEL_REQUIRE_APPROVAL=false
      - DARWIN_GODEL_PERFORMANCE_THRESHOLD=10
      - DARWIN_GODEL_BACKUP_RETENTION_DAYS=30
      - DARWIN_GODEL_MAX_MODIFICATIONS_PER_CYCLE=3
      # Statistics Persistence Configuration
      - STATISTICS_PERSISTENCE_ENABLED=true
      - STATISTICS_RETENTION_DAYS=90
      - STATISTICS_BATCH_SIZE=100
      - CONVERSATION_STORAGE_ENABLED=true
      # Cognee Long-term Storage (when available)
      - COGNEE_LONG_TERM_STORAGE=true
      - COGNEE_CONVERSATION_STORAGE=true
      - COGNEE_PATTERN_LEARNING=true
    ports:
      - "8200:8000"
    depends_on:
      - postgres
      - ollama
    restart: unless-stopped
    networks:
      - autogen_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  ollama_data:

networks:
  autogen_net:
    driver: bridge